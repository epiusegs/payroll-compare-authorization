extend type Query {
  clientUser(id: ID!): ClientUser
  clientUsers(clientId: ID, userId: ID): [ClientUser!]!
}

extend type Mutation {
  createClientUser(clientId: ID!, userId: ID!): ClientUser!
  createClientUsers(
    clientUsers: [ClientUserCreateInput!]!
  ): ClientUserCreateOutput!
  updateClientUser(id: ID!, clientId: ID!, userId: ID!): ClientUser!
  deleteClientUser(id: ID!): ClientUser!
  deleteClientUsers(clientUserIds: [ID!]!): ClientUserDeleteOutput!
}

input ClientUserCreateInput {
  clientId: ID!
  userId: ID!
}
type ClientUserCreateOutput {
  created: Int
}
type ClientUserDeleteOutput {
  deleted: Int
}

type ClientUser {
  id: ID!
  clientId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  userId: ID!
  client: Client!
  user: User!
}
